new function(_){eval(base2.namespace);eval(DOM.namespace);DocumentEvent.implement({createEvent:function(a,b){assertArity(arguments);assert(Traversal.isDocument(a),"Invalid object.");return this.base(a,b)}});EventTarget.implement({addEventListener:_0,dispatchEvent:function(a,b){assertArity(arguments);_1(a);assert(b&&b.type,"Invalid event object.",TypeError);return this.base(a,b);},removeEventListener:_0});function _0(a,b,c,d){assertArity(arguments);_1(a);assertType(c.handleEvent||c,"function","Invalid event listener.");assertType(d,"boolean","Invalid capture argument.");return this.base(a,b,c,d);};function _1(a){assert(a==window||Traversal.isDocument(a)||Traversal.isElement(a),"Invalid event target.",TypeError);};NodeSelector.implement({querySelector:_2,querySelectorAll:_2});function _2(a,b){assertArity(arguments);assert(Traversal.isDocument(a)||Traversal.isElement(a),"Invalid object.",TypeError);return this.base(a,b)}};